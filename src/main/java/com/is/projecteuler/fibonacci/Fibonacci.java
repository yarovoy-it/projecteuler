package com.is.projecteuler.fibonacci;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
public class Fibonacci {

    /**
     * Sum of even value long.
     * Fibonacci sequence whose values do not exceed four million.
     * @return the long
     */
    public static Long sumOfEvenValue() {
        Long first = 1L;
        Long second = 0L;
        Long sum = 0L;
        Long evenSum = 0L;
        while (isLoop(sum)) {
            sum = first + second;
            if (sum % 2 == 0) {
                evenSum = evenSum + sum;
            }
            first = second;
            second = sum;
        }
        return evenSum;
    }

    /**
     * Is how many loop done boolean.
     *
     * @param sum of loop the sum
     * @return the boolean
     */
    private static boolean isLoop(Long sum) {
        return sum < 4_000_000;
    }
}
